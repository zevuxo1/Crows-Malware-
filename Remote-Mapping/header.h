#pragma once

#pragma comment(lib, "OneCore.lib")
#pragma comment(lib, "ntdll")

#include <Windows.h>
#include <stdio.h>
#include <TlHelp32.h>

#define STATUS_SUCCESS ((NTSTATUS)0x00000000L)
#define winfo(msg, ...) wprintf(L"[+] " msg "\n", ##__VA_ARGS__);
#define okay(msg, ...) printf("[*] " msg "\n", ##__VA_ARGS__);
#define info(msg, ...) printf("[+] " msg "\n", ##__VA_ARGS__);
#define error(msg, ...) printf("[!] " msg "\n", ##__VA_ARGS__);


/*=====STRUCT=====*/

typedef enum _SECTION_INHERIT {
	ViewShare = 1,
	ViewUnmap = 2
} SECTION_INHERIT, * PSECTION_INHERIT;
typedef struct _UNICODE_STRING
{
	WORD Length;
	WORD MaximumLength;
	WORD* Buffer;
} UNICODE_STRING, * PUNICODE_STRING;

typedef struct _OBJECT_ATTRIBUTES
{
	ULONG Length;
	PVOID RootDirectory;
	PUNICODE_STRING ObjectName;
	ULONG Attributes;
	PVOID SecurityDescriptor;
	PVOID SecurityQualityOfService;
} OBJECT_ATTRIBUTES, * POBJECT_ATTRIBUTES;


typedef struct _CLIENT_ID
{
	PVOID UniqueProcess;
	PVOID UniqueThread;
} CLIENT_ID, * PCLIENT_ID;


typedef struct _INITIAL_TEB {
	PVOID                StackBase;
	PVOID                StackLimit;
	PVOID                StackCommit;
	PVOID                StackCommitMax;
	PVOID                StackReserved;
} INITIAL_TEB, * PINITIAL_TEB;


/*=====FUNCTIONS=====*/
typedef NTSTATUS(NTAPI* p_NtCreateSection)(
	_Out_ PHANDLE             SectionHandle,
	_In_ ULONG                DesiredAccess,
	_In_opt_ POBJECT_ATTRIBUTES   ObjectAttributes,
	_In_opt_ PLARGE_INTEGER       MaximumSize,
	_In_ ULONG                PageAttributess,
	_In_ ULONG                SectionAttributes,
	_In_opt_ HANDLE               FileHandle 
);

typedef NTSTATUS(NTAPI* p_NtMapViewOfSection)(
	HANDLE SectionHandle,
	HANDLE ProcessHandle,
	PVOID* BaseAddress,
	ULONG_PTR ZeroBits,
	SIZE_T CommitSize,
	PLARGE_INTEGER SectionOffset,
	PSIZE_T ViewSize,
	DWORD InheritDisposition,
	ULONG AllocationType,
	ULONG Win32Protect);


typedef NTSTATUS(NTAPI* p_NtCreateThreadEx)
(
	OUT PHANDLE hThread,
	IN ACCESS_MASK DesiredAccess,
	IN PVOID ObjectAttributes,
	IN HANDLE ProcessHandle,
	IN PVOID lpStartAddress,
	IN PVOID lpParameter,
	IN ULONG Flags,
	IN SIZE_T StackZeroBits,
	IN SIZE_T SizeOfStackCommit,
	IN SIZE_T SizeOfStackReserve,
	OUT PVOID lpBytesBuffer
);
typedef NTSTATUS(NTAPI* p_NtOpenProcess)(
	_Out_         PHANDLE            ProcessHandle,
	_In_          ACCESS_MASK        DesiredAccess,
	_In_           POBJECT_ATTRIBUTES ObjectAttributes,
	_In_opt_ PCLIENT_ID         ClientId
);